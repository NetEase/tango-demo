{"version":3,"file":"p__index.async.js","mappings":"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","sources":["webpack://playground/./src/helpers/mock-files.ts","webpack://playground/./src/helpers/index.tsx","webpack://playground/./src/components/foo-setter.tsx","webpack://playground/./src/helpers/prototypes.ts","webpack://playground/./src/utils/index.ts","webpack://playground/./src/demo/index.ts","webpack://playground/./src/demo/example/index.ts","webpack://playground/./src/demo/example/src/pages/index.js","webpack://playground/./src/pages/index.tsx"],"sourcesContent":["const packageJson = {\n  name: 'demo',\n  private: true,\n  dependencies: {\n    '@music163/antd': '0.2.2',\n    '@music163/tango-boot': '0.2.5',\n    react: '17.0.2',\n    'react-dom': '17.0.2',\n    'prop-types': '15.7.2',\n    tslib: '2.5.0',\n  },\n};\n\nconst tangoConfigJson = {\n  designerConfig: {\n    autoGenerateComponentId: true,\n  },\n  packages: {\n    react: {\n      version: '17.0.2',\n      library: 'React',\n      type: 'dependency',\n      resources: ['https://unpkg.com/react@{{version}}/umd/react.development.js'],\n    },\n    'react-dom': {\n      version: '17.0.2',\n      library: 'ReactDOM',\n      type: 'dependency',\n      resources: ['https://unpkg.com/react-dom@{{version}}/umd/react-dom.development.js'],\n    },\n    'react-is': {\n      version: '16.13.1',\n      library: 'ReactIs',\n      type: 'dependency',\n      resources: ['https://unpkg.com/react-is@{{version}}/umd/react-is.production.min.js'],\n    },\n    'styled-components': {\n      version: '5.3.5',\n      library: 'styled',\n      type: 'dependency',\n      resources: ['https://unpkg.com/styled-components@{{version}}/dist/styled-components.min.js'],\n    },\n    moment: {\n      version: '2.29.4',\n      library: 'moment',\n      type: 'dependency',\n      resources: ['https://unpkg.com/moment@{{version}}/moment.js'],\n    },\n    '@music163/tango-boot': {\n      description: '云音乐低代码运行时框架',\n      version: '0.2.5',\n      library: 'TangoBoot',\n      type: 'baseDependency',\n      resources: ['https://unpkg.com/@music163/tango-boot@{{version}}/dist/boot.js'],\n      // resources: ['http://localhost:9001/boot.js'],\n    },\n    '@music163/antd': {\n      description: '云音乐低代码中后台应用基础物料',\n      version: '0.2.2',\n      library: 'TangoAntd',\n      type: 'baseDependency',\n      resources: [\n        'https://unpkg.com/@music163/antd@{{version}}/dist/index.js',\n        'https://unpkg.com/antd@4.24.13/dist/antd.css',\n      ],\n      designerResources: [\n        'https://unpkg.com/@music163/antd@{{version}}/dist/designer.js',\n        'https://unpkg.com/antd@4.24.13/dist/antd.css',\n      ],\n    },\n  },\n};\n\nconst helperCode = `\nexport function registerComponentPrototype(proto) {\n  if (!proto) return;\n  if (!window.localTangoComponentPrototypes) {\n    window.localTangoComponentPrototypes = {};\n  }\n  if (proto.name) {\n    window.localTangoComponentPrototypes[proto.name] = proto;\n  }\n}\n`;\n\nconst routesCode = `\nimport Index from \"./pages/index\";\n\nconst routes = [\n  {\n    path: '/',\n    exact: true,\n    component: Index\n  },\n];\n\nexport default routes;\n`;\n\nconst storeIndexCode = `\nexport { default as app } from './app';\nexport { default as counter } from './counter';\n`;\n\nconst entryCode = `\nimport { runApp } from '@music163/tango-boot';\nimport routes from './routes';\nimport './services';\nimport './stores';\nimport './index.less';\n\nrunApp({\n  boot: {\n    mountElement: document.querySelector('#root'),\n    qiankun: false,\n  },\n\n  router: {\n    type: 'browser',\n    config: routes,\n  },\n});\n`;\n\nconst storeCounter = `\nimport { defineStore } from '@music163/tango-boot';\n\nconst counter = defineStore({\n  // state\n  num: 0,\n\n  // action\n  increment: () => counter.num++,\n\n  decrement: () => {\n    counter.num--;\n  },\n}, 'counter');\n\nexport default counter;\n`;\n\nconst viewHomeCode = `\nimport React from \"react\";\nimport { definePage } from \"@music163/tango-boot\";\nimport {\n  Page,\n  Section,\n  Button,\n  Input,\n  FormilyForm,\n  FormilyFormItem,\n} from \"@music163/antd\";\nimport { Space } from \"@music163/antd\";\nimport { LocalButton } from \"../components\";\nclass App extends React.Component {\n  render() {\n    return (\n      <Page title={tango.stores.app.title}>\n        <Section tid=\"section1\" title=\"Section Title\">\n          your input: <Input tid=\"input1\" defaultValue=\"hello\" />\n          copy input: <Input value={tango.page.input1?.value} />\n        </Section>\n        <Section tid=\"section2\">\n          <Space tid=\"space1\">\n            <LocalButton />\n            <Button tid=\"button1\">button</Button>\n          </Space>\n        </Section>\n        <Section title=\"区块标题\" tid=\"section3\">\n          <FormilyForm tid=\"formilyForm1\">\n            <FormilyFormItem name=\"input1\" component=\"Input\" label=\"表单项\" />\n            <FormilyFormItem name=\"select1\" component=\"Select\" label=\"表单项\" />\n          </FormilyForm>\n        </Section>\n      </Page>\n    );\n  }\n}\nexport default definePage(App);\n`;\n\nconst componentsButtonCode = `\nimport React from 'react';\nimport { registerComponentPrototype } from '../utils';\n\nexport default function MyButton(props) {\n  return <button {...props}>my button</button>\n}\n\nregisterComponentPrototype({\n  name: 'LocalButton',\n  title: 'Local Button',\n  exportType: 'namedExport',\n  package: '/src/components',\n  props: [\n    { name: 'background', title: '背景色', setter: 'colorSetter'  },\n  ],\n});\n`;\n\nconst componentsInputCode = `\nimport React from 'react';\nimport { registerComponentPrototype } from '../utils';\n\nexport default function MyInput(props) {\n  return <input {...props} />;\n}\n\nregisterComponentPrototype({\n  name: 'LocalInput',\n  title: 'Local Input',\n  exportType: 'namedExport',\n  package: '/src/components',\n  props: [\n    { name: 'color', title: '文本色', setter: 'colorSetter'  },\n  ],\n});\n`;\n\nconst componentsEntryCode = `\nexport { default as LocalButton } from './button';\nexport { default as LocalInput } from './input';\n`;\n\nconst storeApp = `\nimport { defineStore } from '@music163/tango-boot';\n\nexport default defineStore({\n\n  title: 'Page Title',\n\n  array: [1, 2, 3],\n\n  test: function() {\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n    console.log('test');\n  }\n}, 'app');\n`;\n\nconst serviceCode = `\nimport { defineServices } from '@music163/tango-boot';\nimport './sub';\n\nexport default defineServices({\n  longLongLongLongLongLongLongLongGet: {\n    url: 'https://nei.hz.netease.com/api/apimock-v2/cc974ffbaa7a85c77f30e4ce67deb67f/api/getUserProfile',\n    formatter: res => res.data,\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  },\n  get: {\n    url: 'https://nei.hz.netease.com/api/apimock-v2/cc974ffbaa7a85c77f30e4ce67deb67f/api/getUserProfile',\n    formatter: res => res.data,\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  },\n  list: {\n    url: 'https://nei.hz.netease.com/api/apimock-v2/c45109399a1d33d83e32a59984b25b00/anchor-list-normal',\n  },\n  add: {\n    url: 'https://nei.hz.netease.com/api/apimock-v2/c45109399a1d33d83e32a59984b25b00/api/users',\n    method: 'post',\n  },\n  update: {\n    url: 'https://nei.hz.netease.com/api/apimock-v2/c45109399a1d33d83e32a59984b25b00/api/users',\n    method: 'post',\n  },\n  delete: {\n    url: 'https://nei.hz.netease.com/api/apimock-v2/c45109399a1d33d83e32a59984b25b00/api/users?id=1',\n  },\n});\n`;\n\nconst subServiceCode = `\nimport { defineServices } from '@music163/tango-boot';\n\nexport default defineServices({\n  list: {\n    url: 'https://nei.hz.netease.com/api/apimock-v2/c45109399a1d33d83e32a59984b25b00/anchor-list-normal',\n  },\n}, {\n  namespace: 'sub',\n});\n`;\n\nconst lessCode = `\nbody {\n  font-size: 12px;\n}\n`;\n\nconst cssCode = `\n* {\n  margin: 0;\n  padding: 0;\n}\n\np {\n  color: red;\n}\n`;\n\nexport const sampleFiles = [\n  { filename: '/package.json', code: JSON.stringify(packageJson) },\n  { filename: '/tango.config.json', code: JSON.stringify(tangoConfigJson) },\n  { filename: '/README.md', code: '# readme' },\n  { filename: '/src/index.less', code: lessCode },\n  { filename: '/src/style.css', code: cssCode },\n  { filename: '/src/index.js', code: entryCode },\n  { filename: '/src/pages/index.js', code: viewHomeCode },\n  { filename: '/src/components/button.js', code: componentsButtonCode },\n  { filename: '/src/components/input.js', code: componentsInputCode },\n  { filename: '/src/components/index.js', code: componentsEntryCode },\n  { filename: '/src/routes.js', code: routesCode },\n  { filename: '/src/stores/index.js', code: storeIndexCode },\n  { filename: '/src/stores/app.js', code: storeApp },\n  { filename: '/src/stores/counter.js', code: storeCounter },\n  { filename: '/src/services/index.js', code: serviceCode },\n  { filename: '/src/services/sub.js', code: subServiceCode },\n  { filename: '/src/utils/index.js', code: helperCode },\n];\n\nexport const genDefaultPage = (index: number) => ({\n  name: 'new-page',\n  code: `\n  import React from 'react';\n  import tango, { definePage } from '@music163/tango-boot';\n  import { Page, Section } from '@music163/antd';\n\n  function App() {\n    return (\n      <Page title=\"空白模板${index}\">\n        <Section></Section>\n      </Page>\n    )\n  }\n\n  export default definePage(App);\n  `,\n});\n","import React from 'react';\nimport { Box, Group } from 'coral-system';\nimport { Avatar, Space, Switch } from 'antd';\nimport { BranchesOutlined, MenuOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport { registerSetter } from '@music163/tango-designer';\nimport type { IVariableTreeNode } from '@music163/tango-helpers';\nimport { FooSetter } from '../components';\n\nexport * from './mock-files';\n\nexport const bootHelperVariables: IVariableTreeNode[] = [\n  {\n    key: '$helpers',\n    title: '工具函数',\n    children: [\n      {\n        title: '设置变量值',\n        key: '() => tango.setStoreValue(\"variableName\", \"variableValue\")',\n        type: 'function',\n        help: '设置状态值，tango.setStoreValue(\"variableName\", \"variableValue\")',\n      },\n      {\n        title: '获取变量值',\n        key: '() => tango.getStoreValue(\"variableName\")',\n        type: 'function',\n        help: '获取状态值',\n      },\n      { title: '打开弹窗', key: '() => tango.openModal(\"\")', type: 'function' },\n      { title: '关闭弹窗', key: '() => tango.closeModal(\"\")', type: 'function' },\n      { title: '切换路由', key: '() => tango.navigateTo(\"/\")', type: 'function' },\n      {\n        title: '拷贝到剪贴板',\n        key: '() => tango.copyToClipboard(\"hello\")',\n        type: 'function',\n      },\n    ],\n  },\n];\n\n// 注册自定义 setter\nregisterSetter({\n  name: 'fooSetter',\n  component: FooSetter,\n});\n\n// 平台 Logo\nexport function Logo() {\n  return (\n    <Box width=\"50px\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\" fontSize=\"20px\">\n      <MenuOutlined />\n    </Box>\n  );\n}\n\n// 项目信息\nexport function ProjectDetail({ name }: { name?: string }) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\" columnGap=\"l\">\n      <Box className=\"ProjectName\" fontSize=\"18px\" fontWeight=\"bold\">\n        Tango Playground\n      </Box>\n      <Box className=\"BranchName\" as=\"code\" fontSize=\"14px\">\n        <BranchesOutlined /> {name || 'demo'}\n      </Box>\n    </Box>\n  );\n}\n\nexport function SidebarFooter() {\n  return (\n    <Space direction=\"vertical\" align=\"center\">\n      <QuestionCircleOutlined style={{ fontSize: 20 }} />\n      <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n    </Space>\n  );\n}\n\ninterface ActionsProps {\n  defaultChecked?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  onChange?: (checked: boolean) => void;\n}\n\n// 平台核心行动点\nexport function Actions({ defaultChecked }: ActionsProps) {\n  return (\n    <Group spacingX=\"8px\">\n      <Switch defaultChecked={defaultChecked} checkedChildren=\"新版\" unCheckedChildren=\"老版\" />\n    </Group>\n  );\n}\n\nexport const menuData: any = {\n  // 常用组件\n  common: [\n    {\n      title: '基本',\n      items: [\n        'Button',\n        'ButtonGroup',\n        'ActionList',\n        'Action',\n        'Image',\n        'Text',\n        'MultilineText',\n        'Link',\n        'Title',\n        'Paragraph',\n        'Icon',\n      ],\n    },\n    {\n      title: '数据和逻辑',\n      items: ['When', 'DataProvider', 'Interval', 'Each'],\n    },\n    {\n      title: '基础布局',\n      items: [\n        'Section',\n        'Columns',\n        'Box',\n        'Divider',\n        'Space',\n        'Tabs',\n        'Toolbar',\n        'Modal',\n        'Drawer',\n        'SnippetButtonGroup',\n        'Snippet2ColumnLayout',\n        'Snippet3ColumnLayout',\n        'SnippetSuccessResult',\n      ],\n    },\n    {\n      title: '表单表格',\n      items: [\n        'XTable',\n        'XEditableTable',\n        // 'Table',\n        'XForm',\n        'XFormItem',\n        'XStepForms',\n        // 'SearchForm',\n        // 'Form',\n        // 'FormItem',\n      ],\n    },\n    {\n      title: '常用图表',\n      items: [\n        'ChartContainer',\n        'BarChart',\n        'LineChart',\n        'PieChart',\n        'FunnelChart',\n        'ScatterChart',\n        'RadarChart',\n        'WordCloud',\n      ],\n    },\n    {\n      title: '导航',\n      items: [\n        'Breadcrumb',\n        'Dropdown',\n        'Menu',\n        // 'PageHeader',\n        'Pagination',\n        'Steps',\n      ],\n    },\n    {\n      title: '数据录入',\n      items: [\n        'AutoComplete',\n        'Cascader',\n        'Checkbox',\n        'CheckboxGroup',\n        'DatePicker',\n        'DateRangePicker',\n        'WeekPicker',\n        'MonthPicker',\n        'YearPicker',\n        'Input',\n        'InputNumber',\n        'InputKV',\n        'Mentions',\n        'Radio',\n        'RadioGroup',\n        'Rate',\n        'Select',\n        'Slider',\n        'Switch',\n        'Search',\n        'TextArea',\n        'TimePicker',\n        'TimeRangePicker',\n        'Transfer',\n        'TreeSelect',\n        'Upload',\n        'NosUpload',\n      ],\n    },\n    {\n      title: '数据展示',\n      items: [\n        'Avatar',\n        'Badge',\n        'RibbonBadge',\n        'Calendar',\n        'Card',\n        'Carousel',\n        'Collapse',\n        'Comment',\n        'Descriptions',\n        'Empty',\n        'Image',\n        'List',\n        'Popover',\n        'Statistic',\n        'Table',\n        'Tag',\n        'CheckableTag',\n        'Skeleton',\n        'SkeletonAvatar',\n        'SkeletonButton',\n        'SkeletonInput',\n        'SkeletonImage',\n        'SkeletonNode',\n        'Spin',\n        'Timeline',\n        'Tooltip',\n        'Tree',\n      ],\n    },\n    {\n      title: '反馈',\n      items: [\n        'Alert',\n        'Drawer',\n        // 'Message',\n        'Modal',\n        'Notification',\n        'Popconfirm',\n        'Progress',\n        'Result',\n      ],\n    },\n  ],\n};\n","import React from 'react';\n\nexport function FooSetter({ value, ...rest }: any) {\n  return <code {...rest}>fooSetter: {value}</code>;\n}\n","import * as basePrototypes from '@music163/antd/prototypes';\nimport type { IComponentPrototype, Dict } from '@music163/tango-helpers';\n\nconst sampleBlockCode = `\n<Section>\n  <Result\n      status=\"success\"\n      title=\"Successfully Purchased Cloud Server ECS!\"\n      subTitle=\"Order number: 2017182818828182881 Cloud server configuration takes 1-5 minutes, please wait.\"\n      extra={[\n        <Button type=\"primary\" key=\"console\">\n          Go Console\n        </Button>,\n        <Button key=\"buy\">Buy Again</Button>,\n      ]}\n    />\n</Section>\n`;\n\nconst SnippetSuccessResult: IComponentPrototype = {\n  name: 'SnippetSuccessResult',\n  title: '成功结果',\n  icon: 'icon-tupian',\n  type: 'snippet',\n  package: '@music163/antd',\n  initChildren: sampleBlockCode,\n  relatedImports: ['Section', 'Result', 'Button'],\n};\n\nconst Snippet2ColumnLayout: IComponentPrototype = {\n  name: 'Snippet2ColumnLayout',\n  title: '两列布局',\n  icon: 'icon-columns',\n  type: 'snippet',\n  package: '@music163/antd',\n  initChildren: `\n  <Columns columns={12}>\n    <Column colSpan={6}></Column>\n    <Column colSpan={6}></Column>\n  </Columns>\n  `,\n  relatedImports: ['Columns', 'Column'],\n};\n\nconst Snippet3ColumnLayout: IComponentPrototype = {\n  name: 'Snippet3ColumnLayout',\n  title: '三列布局',\n  icon: 'icon-column3',\n  type: 'snippet',\n  package: '@music163/antd',\n  initChildren: `\n  <Columns columns={12}>\n    <Column colSpan={4}></Column>\n    <Column colSpan={4}></Column>\n    <Column colSpan={4}></Column>\n  </Columns>\n  `,\n  relatedImports: ['Columns', 'Column'],\n};\n\nconst SnippetButtonGroup: IComponentPrototype = {\n  name: 'SnippetButtonGroup',\n  title: '按钮组',\n  icon: 'icon-anniuzu',\n  type: 'snippet',\n  package: '@music163/antd',\n  initChildren: `\n  <Space>\n    <Button type=\"primary\">按钮1</Button>\n    <Button>按钮2</Button>\n  </Space>\n  `,\n  relatedImports: ['Space', 'Button'],\n};\n\n// hack some prototypes\nbasePrototypes['Section'].siblingNames = [\n  'SnippetButtonGroup',\n  'Section',\n  'Section',\n  'Section',\n  'Section',\n  'Section',\n  'Section',\n  'Section',\n];\n\n// iconfont: https://www.iconfont.cn/manage/index?manage_type=myprojects&projectId=2891794\nconst prototypes: Dict<IComponentPrototype> = {\n  ...(basePrototypes as any),\n  SnippetSuccessResult,\n  Snippet2ColumnLayout,\n  Snippet3ColumnLayout,\n  SnippetButtonGroup,\n  Box: {\n    name: 'Box',\n    title: '盒子',\n    icon: 'icon-mianban',\n    type: 'container',\n    package: '@music163/antd',\n    hasChildren: true,\n    siblingNames: ['Box'],\n  },\n  Columns: {\n    name: 'Columns',\n    type: 'container',\n    icon: 'icon-column-4',\n    package: '@music163/antd',\n    hasChildren: true,\n    childrenNames: ['Column'],\n  },\n  Column: {\n    name: 'Column',\n    type: 'container',\n    icon: 'icon-juxing',\n    package: '@music163/antd',\n    hasChildren: true,\n    siblingNames: ['Column'],\n  },\n  Text: {\n    name: 'Text',\n    type: 'element',\n    icon: 'icon-wenzi',\n    package: '@music163/antd',\n    initChildren: '文本内容',\n  },\n  Placeholder: {\n    name: 'Placeholder',\n    type: 'element',\n    package: '@music163/antd',\n  },\n  ButtonGroup: {\n    name: 'ButtonGroup',\n    type: 'element',\n    package: '@music163/antd',\n    hasChildren: true,\n    childrenNames: ['Button'],\n  },\n};\n\nexport default prototypes;\n","import { IFileConfig } from '@music163/tango-core';\nimport { sampleFiles } from '../helpers';\n\nexport type DemoItemType = {\n  title?: string;\n  description?: string;\n  files: IFileConfig[];\n  [x: string]: any;\n};\n\nexport const mergeDemo = (item: DemoItemType): DemoItemType => {\n  const { files, ...rest } = item;\n  const result = sampleFiles.filter(e => (\n    files?.every(i => i.filename !== e.filename)\n  ));\n  result.push(...files);\n\n  return {\n    ...rest,\n    files: result,\n  };\n};","import { DemoItemType, mergeDemo } from '../utils';\nimport example from './example';\n\nexport default {\n  example: mergeDemo(example),\n} as {\n  [x: string]: DemoItemType;\n};","// @ts-nocheck\nimport srcPagesIndex from '!!raw-loader!./src/pages/index.js';\n\nexport default {\n  title: 'Example',\n  files: [{\n    filename: '/src/pages/index.js', code: srcPagesIndex\n  }]\n};","export default \"import React from \\\"react\\\";\\nimport { definePage } from \\\"@music163/tango-boot\\\";\\nimport {\\n  Button,\\n  Input\\n} from \\\"@music163/antd\\\";\\nclass App extends React.Component {\\n  render() {\\n    return (\\n      <div>\\n        <Button>Hello World!</Button>\\n        <Input placeholder=\\\"This is example demo\\\" />\\n      </div>\\n    );\\n  }\\n}\\nexport default definePage(App);\";","import React, { useEffect, useMemo } from 'react';\nimport { Box } from 'coral-system';\nimport { Button, Space } from 'antd';\nimport {\n  Designer,\n  DesignerPanel,\n  SettingPanel,\n  Sidebar,\n  Toolbar,\n  WorkspacePanel,\n  WorkspaceView,\n  CodeEditor,\n  Sandbox,\n  DndQuery,\n  themeLight,\n} from '@music163/tango-designer';\nimport { createEngine, Workspace } from '@music163/tango-core';\nimport prototypes from '../helpers/prototypes';\nimport { Logo, ProjectDetail, bootHelperVariables, sampleFiles } from '../helpers';\nimport {\n  ApiOutlined,\n  AppstoreAddOutlined,\n  BuildOutlined,\n  ClusterOutlined,\n  FunctionOutlined,\n  createFromIconfontCN,\n} from '@ant-design/icons';\n\nimport demo from '../demo';\nimport { DemoItemType } from '../utils';\nimport { useLocation, useMatch } from 'umi';\n\n// 1. 实例化工作区\nconst workspace = new Workspace({\n  entry: '/src/index.js',\n  files: sampleFiles,\n  prototypes,\n});\n\n// inject workspace to window for debug\n(window as any).__workspace__ = workspace;\n\n// 2. 引擎初始化\nconst engine = createEngine({\n  workspace,\n});\n\n// @ts-ignore\nwindow.__workspace__ = workspace;\n\n// 3. 沙箱初始化\nconst sandboxQuery = new DndQuery({\n  context: 'iframe',\n});\n\n// 4. 图标库初始化（物料面板和组件树使用了 iconfont 里的图标）\ncreateFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/c/font_2891794_6d4hj5u0bjx.js',\n});\n\nconst menuData = {\n  common: [\n    {\n      title: '常用',\n      items: [\n        'Button',\n        'Section',\n        'Columns',\n        'Column',\n        'Box',\n        'Space',\n        'Typography',\n        'Title',\n        'Paragraph',\n        'Table',\n        'Each',\n      ],\n    },\n    {\n      title: '输入',\n      items: ['Input', 'InputNumber', 'Select'],\n    },\n    {\n      title: 'Formily表单',\n      items: ['FormilyForm', 'FormilyFormItem', 'FormilySubmit', 'FormilyReset'],\n    },\n  ],\n};\n\n/**\n * 5. 平台初始化，访问 https://local.netease.com:6006/\n */\nexport default function App() {\n\n  const location = useLocation();\n  const match = useMatch({ path: '/:name' });\n  const name = useMemo(() => {\n    if (match?.params?.name) {\n      return match?.params?.name;\n    }\n    const query = new URLSearchParams(location.search);\n    return query.get('name') || undefined;\n  }, [match?.params, location.search]);\n\n  useEffect(() => {\n    if (!name || !demo[name]) {\n      return;\n    }\n\n    (demo[name] as DemoItemType)?.files?.forEach?.((item) => {\n      workspace.addFile(item.filename, item.code);\n    });\n  }, [name]);\n\n  return (\n    <Designer\n      theme={themeLight}\n      engine={engine}\n      config={{\n        customActionVariables: bootHelperVariables,\n        customExpressionVariables: bootHelperVariables,\n      }}\n      sandboxQuery={sandboxQuery}\n    >\n      <DesignerPanel\n        logo={<Logo />}\n        description={<ProjectDetail name={name && demo[name] && (demo[name]?.title || name)} />}\n        actions={\n          <Box px=\"l\">\n            <Toolbar>\n              <Toolbar.Item key=\"routeSwitch\" placement=\"left\" />\n              <Toolbar.Item key=\"history\" placement=\"left\" />\n              <Toolbar.Item key=\"preview\" placement=\"left\" />\n              <Toolbar.Item key=\"modeSwitch\" placement=\"right\" />\n              <Toolbar.Item key=\"togglePanel\" placement=\"right\" />\n              <Toolbar.Separator />\n              <Toolbar.Item placement=\"right\">\n                <Space>\n                  <Button type=\"primary\">发布</Button>\n                </Space>\n              </Toolbar.Item>\n            </Toolbar>\n          </Box>\n        }\n      >\n        <Sidebar>\n          <Sidebar.Item\n            key=\"components\"\n            label=\"组件\"\n            icon={<AppstoreAddOutlined />}\n            widgetProps={{\n              menuData,\n            }}\n          />\n          <Sidebar.Item key=\"outline\" label=\"结构\" icon={<BuildOutlined />} />\n          <Sidebar.Item\n            key=\"variables\"\n            label=\"变量\"\n            icon={<FunctionOutlined />}\n            isFloat\n            width={800}\n          />\n          <Sidebar.Item key=\"dataSource\" label=\"接口\" icon={<ApiOutlined />} isFloat width={800} />\n          <Sidebar.Item\n            key=\"dependency\"\n            label=\"依赖\"\n            icon={<ClusterOutlined />}\n            isFloat\n            width={800}\n          />\n        </Sidebar>\n        <WorkspacePanel>\n          <WorkspaceView mode=\"design\">\n            <Sandbox\n              bundlerURL={process.env.SANDBOX_BUNDLER_URL || 'https://tango-demo.musicfe.com'}\n              onMessage={(e) => {\n                if (e.type === 'done') {\n                  const sandboxWindow: any = sandboxQuery.window;\n                  // if (sandboxWindow.TangoAntd) {\n                  // if (sandboxWindow.TangoAntd.menuData) {\n                  //   setMenuData(sandboxWindow.TangoAntd.menuData);\n                  // }\n                  // if (sandboxWindow.TangoAntd.prototypes) {\n                  //   workspace.setComponentPrototypes(sandboxWindow.TangoAntd.prototypes);\n                  // }\n                  // }\n                  if (sandboxWindow.localTangoComponentPrototypes) {\n                    workspace.setComponentPrototypes(sandboxWindow.localTangoComponentPrototypes);\n                  }\n                }\n              }}\n              navigatorExtra={<Button size=\"small\">hello world</Button>}\n            />\n          </WorkspaceView>\n          <WorkspaceView mode=\"code\">\n            <CodeEditor />\n          </WorkspaceView>\n        </WorkspacePanel>\n        <SettingPanel />\n      </DesignerPanel>\n    </Designer>\n  );\n}\n"],"names":["sampleFiles","filename","code","JSON","stringify","name","private","dependencies","react","tslib","designerConfig","autoGenerateComponentId","packages","version","library","type","resources","moment","description","designerResources","bootHelperVariables","key","title","children","help","Logo","_jsx","Box","width","display","alignItems","justifyContent","fontSize","MenuOutlined","ProjectDetail","_ref","_jsxs","columnGap","className","fontWeight","as","BranchesOutlined","registerSetter","component","value","rest","_objectWithoutProperties","_excluded","_objectSpread","SnippetSuccessResult","icon","package","initChildren","relatedImports","basePrototypes","siblingNames","item","files","result","Snippet2ColumnLayout","Snippet3ColumnLayout","SnippetButtonGroup","hasChildren","Columns","childrenNames","Column","Text","Placeholder","ButtonGroup","example","filter","e","every","i","push","apply","_toConsumableArray","workspace","Workspace","entry","prototypes","window","__workspace__","engine","createEngine","sandboxQuery","DndQuery","context","createFromIconfontCN","scriptUrl","menuData","common","items","App","_demo$name2","location","useLocation","match","useMatch","path","useMemo","_match$params","_match$params2","params","URLSearchParams","search","get","undefined","useEffect","_demo$name","_demo$name$forEach","demo","forEach","call","addFile","Designer","theme","themeLight","config","customActionVariables","customExpressionVariables","DesignerPanel","logo","actions","px","Toolbar","Item","placement","Separator","Space","Button","Sidebar","label","AppstoreAddOutlined","widgetProps","BuildOutlined","FunctionOutlined","isFloat","ApiOutlined","ClusterOutlined","WorkspacePanel","WorkspaceView","mode","Sandbox","bundlerURL","onMessage","sandboxWindow","localTangoComponentPrototypes","setComponentPrototypes","navigatorExtra","size","CodeEditor","SettingPanel"],"sourceRoot":""}